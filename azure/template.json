{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "The name of the environment."
      }
    },
    "resourceEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource environment."
      }
    },
    "configurationStorageConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "The connection string to connect to the table configuration storage account."
      }
    },
    "serviceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the service."
      }
    },
    "sharedFrontEndAppServicePlan": {
      "type": "string",
      "metadata": {
        "description": "The name of the shared front end App Service Plan."
      }
    },
    "sharedFrontEndSubnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource id of the shared front end subnet."
      }
    },
    "sharedBackEndAppServicePlan": {
      "type": "string",
      "metadata": {
        "description": "The name of the shared back end App Service Plan."
      }
    },
    "sharedBackEndSubnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource id of the shared back end subnet."
      }
    },
    "sharedAppServicePlanResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group where the shared App Service Plans are located."
      }
    },
    "backEndAccessRestrictions": {
      "type": "array",
      "metadata": {
        "description": "An array of IPs or subnet resourceIds used to set ipSecurityRestrictions for the API."
      }
    },
    "frontEndAccessRestrictions": {
      "type": "array",
      "metadata": {
        "description": "An array of IPs or subnet resourceIds used to set ipSecurityRestrictions for the UI."
      }
    },
    "loggingRedisConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "The connection string for the Redis logging cache."
      }
    },
    "uiCustomHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The DNS hostname for the service."
      }
    },
    "apiCustomHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The DNS hostname for the api service."
      }
    },
    "uiKeyVaultCertificateName": {
      "type": "string",
      "metadata": {
        "description": "The name of the certificate stored in the shared keyvault."
      }
    },
    "apiKeyVaultCertificateName": {
      "type": "string",
      "metadata": {
        "description": "The name of the certificate stored in the shared keyvault."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the shared keyvault."
      }
    },
    "keyVaultResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group name of the shared keyvault."
      }
    },
    "cdnUrl": {
      "type": "string",
      "metadata": {
        "description": "The cdn url for the UI app service"
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
    "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "uiAppServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
    "apiAppServiceName": "[concat(variables('resourceNamePrefix'), 'api-as')]"
  },
  "resources": [
    {
      "condition": "[greater(length(parameters('apiCustomHostName')), 0)]",
      "apiVersion": "2017-05-10",
      "name": "[concat('api-app-service-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('apiKeyVaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroupName')]"
          }
        }
      }
    },
    {
      "condition": "[greater(length(parameters('uiCustomHostName')), 0)]",
      "apiVersion": "2017-05-10",
      "name": "[concat('ui-app-service-certificate-', parameters('utcValue'))]",
      "resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('uiKeyVaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroupName')]"
          }
        }
      },
      "dependsOn": [
        "[concat('api-app-service-certificate-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('api-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('apiAppServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('ui-application-insights-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "attachedService": {
            "value": "[variables('uiAppServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('api-app-service-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('apiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedBackEndAppServicePlan')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedAppServicePlanResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedBackEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat('api-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "[toUpper(parameters('environmentName'))]"
                }
              ]
            }
          },
          "appServiceConnectionStrings": {
            "value": {
              "array": [
                {
                  "name": "Redis",
                  "connectionString": "[parameters('loggingRedisConnectionString')]",
                  "type": "Custom"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('apiCustomHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('apiCustomHostname')), 0), reference(concat('api-app-service-certificate-', parameters('utcValue')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('backEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[concat('api-app-service-certificate-', parameters('utcValue'))]"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('ui-app-service-', parameters('utcValue'))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-v2.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('uiAppServiceName')]"
          },
          "appServicePlanName": {
            "value": "[parameters('sharedFrontEndAppServicePlan')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[parameters('sharedAppServicePlanResourceGroup')]"
          },
          "subnetResourceId": {
            "value": "[parameters('sharedFrontEndSubnetResourceId')]"
          },
          "appServiceAppSettings": {
            "value": {
              "array": [
                {
                  "name": "EnvironmentName",
                  "value": "[parameters('environmentName')]"
                },
                {
                  "name": "ConfigurationStorageConnectionString",
                  "value": "[parameters('configurationStorageConnectionString')]"
                },
                {
                  "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                  "value": "[reference(concat('ui-application-insights-', parameters('utcValue'))).outputs.InstrumentationKey.value]"
                },
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "[toUpper(parameters('environmentName'))]"
                },
                {
                  "name": "cdn:url",
                  "value": "[parameters('cdnUrl')]"
                }
              ]
            }
          },
          "appServiceConnectionStrings": {
            "value": {
              "array": [
                {
                  "name": "Redis",
                  "connectionString": "[parameters('loggingRedisConnectionString')]",
                  "type": "Custom"
                }
              ]
            }
          },
          "customHostName": {
            "value": "[parameters('uiCustomHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('uiCustomHostname')), 0), reference(concat('ui-app-service-certificate-', parameters('utcValue')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
          },
          "ipSecurityRestrictions": {
            "value": "[parameters('frontEndAccessRestrictions')]"
          }
        }
      },
      "dependsOn": [
        "[concat('ui-app-service-certificate-', parameters('utcValue'))]"
      ]
    }
  ],
  "outputs": {
    "UiAppServiceName": {
      "type": "string",
      "value": "[variables('uiAppServiceName')]"
    },
    "ApiAppServiceName": {
      "type": "string",
      "value": "[variables('apiAppServiceName')]"
    }
  }
}
